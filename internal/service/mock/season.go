// Code generated by MockGen. DO NOT EDIT.
// Source: season.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	domain "timeline/internal/domain"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockSeasonInterface is a mock of SeasonInterface interface.
type MockSeasonInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSeasonInterfaceMockRecorder
}

// MockSeasonInterfaceMockRecorder is the mock recorder for MockSeasonInterface.
type MockSeasonInterfaceMockRecorder struct {
	mock *MockSeasonInterface
}

// NewMockSeasonInterface creates a new mock instance.
func NewMockSeasonInterface(ctrl *gomock.Controller) *MockSeasonInterface {
	mock := &MockSeasonInterface{ctrl: ctrl}
	mock.recorder = &MockSeasonInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSeasonInterface) EXPECT() *MockSeasonInterfaceMockRecorder {
	return m.recorder
}

// GetSeasonById mocks base method.
func (m *MockSeasonInterface) GetSeasonById(ctx context.Context, seasonId int) (domain.Season, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSeasonById", ctx, seasonId)
	ret0, _ := ret[0].(domain.Season)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSeasonById indicates an expected call of GetSeasonById.
func (mr *MockSeasonInterfaceMockRecorder) GetSeasonById(ctx, seasonId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSeasonById", reflect.TypeOf((*MockSeasonInterface)(nil).GetSeasonById), ctx, seasonId)
}

// GetSeasonByMatchId mocks base method.
func (m *MockSeasonInterface) GetSeasonByMatchId(ctx *gin.Context, matchId int) (domain.Season, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSeasonByMatchId", ctx, matchId)
	ret0, _ := ret[0].(domain.Season)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSeasonByMatchId indicates an expected call of GetSeasonByMatchId.
func (mr *MockSeasonInterfaceMockRecorder) GetSeasonByMatchId(ctx, matchId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSeasonByMatchId", reflect.TypeOf((*MockSeasonInterface)(nil).GetSeasonByMatchId), ctx, matchId)
}

// GetSeasons mocks base method.
func (m *MockSeasonInterface) GetSeasons(ctx *gin.Context, competitionId int, queryParams domain.GetSeasonsQueryParams) ([]domain.Season, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSeasons", ctx, competitionId, queryParams)
	ret0, _ := ret[0].([]domain.Season)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSeasons indicates an expected call of GetSeasons.
func (mr *MockSeasonInterfaceMockRecorder) GetSeasons(ctx, competitionId, queryParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSeasons", reflect.TypeOf((*MockSeasonInterface)(nil).GetSeasons), ctx, competitionId, queryParams)
}
